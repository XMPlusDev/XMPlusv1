name: Build and Release

on:
  workflow_dispatch:
  release:
    types: [ published ]

jobs:

  build:
    strategy:
      matrix:
        # Include amd64 on all platforms.
        goos: [ windows, linux ]
        goarch: [ amd64, 386 ]
        include:
          # BEGIN Linux ARM 5 6 7
          - goos: linux
            goarch: arm
            goarm: 7
          - goos: linux
            goarch: arm
            goarm: 6
          - goos: linux
            goarch: arm
            goarm: 5
          # BEGIN Other architectures
          # BEGIN riscv64 & ARM64
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: riscv64
          # END riscv64 & ARM64
          # BEGIN MIPS
          - goos: linux
            goarch: mips64
          - goos: linux
            goarch: mips64le
          - goos: linux
            goarch: mipsle
          - goos: linux
            goarch: mips
      fail-fast: false

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3
      - name: Show workflow information
        id: get_filename
        run: |
          export _NAME=$(jq ".[\"$GOOS-$GOARCH$GOARM$GOMIPS\"].friendlyName" -r < .github/build/friendly-filenames.json)
          echo "GOOS: $GOOS, GOARCH: $GOARCH, GOARM: $GOARM, GOMIPS: $GOMIPS, RELEASE_NAME: $_NAME"
          echo "ASSET_NAME=$_NAME" >> $GITHUB_OUTPUT
          echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.20

      - name: Get project dependencies
        run: go mod download

      - name: Build XMPlus
        run: |
          mkdir -p build_assets
          go build -v -o build_assets/XMPlus -trimpath -ldflags "-s -w -buildid="
          
      - name: Build Mips softfloat XMPlus
        if: matrix.goarch == 'mips' || matrix.goarch == 'mipsle'
        run: |
         GOMIPS=softfloat go build -v -o build_assets/XMPlus_softfloat -trimpath -ldflags "-s -w -buildid="
          
      - name: Rename Windows XMPlus
        if: matrix.goos == 'windows'
        run: |
          cd ./build_assets || exit 1
          mv XMPlus XMPlus.exe

      - name: Prepare to release
        run: |
          cp ${GITHUB_WORKSPACE}/files/dns.json ./build_assets/dns.json
          cp ${GITHUB_WORKSPACE}/files/route.json ./build_assets/route.json
          cp ${GITHUB_WORKSPACE}/files/outbound.json ./build_assets/outbound.json
          cp ${GITHUB_WORKSPACE}/files/inbound.json ./build_assets/inbound.json
          cp ${GITHUB_WORKSPACE}/files/config.yml ./build_assets/config.yml
          cp ${GITHUB_WORKSPACE}/files/rulelist ./build_assets/rulelist
          LIST=('geoip geoip geoip' 'domain-list-community dlc geosite')
          for i in "${LIST[@]}"
          do
              INFO=($(echo $i | awk 'BEGIN{FS=" ";OFS=" "} {print $1,$2,$3}'))
              FILE_NAME="${INFO[2]}.dat"
              echo -e "Downloading https://raw.githubusercontent.com/v2fly/${INFO[0]}/release/${INFO[1]}.dat..."
              curl -L "https://raw.githubusercontent.com/v2fly/${INFO[0]}/release/${INFO[1]}.dat" -o ./build_assets/${FILE_NAME}
              echo -e "Verifying HASH key..."
              HASH="$(curl -sL "https://raw.githubusercontent.com/v2fly/${INFO[0]}/release/${INFO[1]}.dat.sha256sum" | awk -F ' ' '{print $1}')"
              [ "$(sha256sum "./build_assets/${FILE_NAME}" | awk -F ' ' '{print $1}')" == "${HASH}" ] || { echo -e "The HASH key of ${FILE_NAME} does not match cloud one."; exit 1; }
          done
      - name: Create ZIP archive
        shell: bash
        run: |
          pushd build_assets || exit 1
          touch -mt $(date +%Y01010000) *
          zip -9vr ../XMPlus-$ASSET_NAME.zip .
          popd || exit 1
          FILE=./XMPlus-$ASSET_NAME.zip
          DGST=$FILE.dgst
          for METHOD in {"md5","sha1","sha256","sha512"}
          do
            openssl dgst -$METHOD $FILE | sed 's/([^)]*)//g' >>$DGST
          done
      - name: Change the name
        run: |
          mv build_assets XMPlus-$ASSET_NAME
      #- name: Upload files to Artifacts
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: XMPlus-${{ steps.get_filename.outputs.ASSET_NAME }}
      #    path: |
      #      ./XMPlus-${{ steps.get_filename.outputs.ASSET_NAME }}/*
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./XMPlus-${{ steps.get_filename.outputs.ASSET_NAME }}.zip*
          tag: ${{ github.ref }}
          file_glob: true
